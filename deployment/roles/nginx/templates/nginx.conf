server {
    listen 80;
    listen [::]:80;
    return 301 https://$host$request_uri;
}

server {
    server_name www.{{inventory_hostname}};
    return 301 $scheme://{{inventory_hostname}}$request_uri;
}

upstream socket {
    server localhost:3000;
}

server {
    listen 443 ssl;
    listen [::]:443 ipv6only=on ssl;
    server_name ~^{{inventory_hostname}}$;

    sendfile off;

    access_log /var/log/{{project_name}}/nginx-access.log;
    error_log  /var/log/{{project_name}}/nginx-error.log;

    ssl on;
    ssl_certificate     /etc/letsencrypt/live/{{inventory_hostname.replace("dev.", "")}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{inventory_hostname.replace("dev.", "")}}/privkey.pem;
    ssl_dhparam         /etc/nginx/ssl/dhparam.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers   HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    ssl_stapling            on;
    ssl_stapling_verify     on;
    ssl_trusted_certificate /etc/letsencrypt/live/{{inventory_hostname.replace("dev.", "")}}/chain.pem;

    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    if ($host !~* ^{{inventory_hostname}}$ ) {
        return 444;
    }

    location ^~ /.well-known/acme-challenge/ {
        alias   /usr/share/nginx/html/certbot/.well-known/acme-challenge/;
    }

    location /static/ {
        alias   {{project_dir}}naxos/static/;
    }

    location /media/ {
        alias   {{project_dir}}naxos/media/;
    }

    location / {
        proxy_http_version  1.1;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    Host $http_host;
        proxy_set_header    X-NginX-Proxy true;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_redirect      off;
        proxy_pass          http://127.0.0.1:8000/;  # gunicorn server
    }

    location /socket.io {
        proxy_http_version  1.1;
        proxy_set_header  	X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header	  Host $http_host;
        proxy_set_header	  Upgrade $http_upgrade;
        proxy_set_header	  Connection "upgrade";
        proxy_redirect		  off;
        proxy_pass		      http://socket;
    }
}
