server {
    listen 80;
    listen [::]:80;
    return 301 https://$host$request_uri;
}

server {
   listen 443 ssl;
   listen [::]:443 ssl;
   # if inventory_hostname is dev.domain.com this rule will not trigger
   # because this server_name will try to match dev.dev.domain.com
   server_name ~^(www|dev)\.{{inventory_hostname}}$;
   return 301 https://{{inventory_hostname}}$request_uri;
}

upstream socket {
    server localhost:3000;
}

server {
    listen 443 ssl;
    listen [::]:443 ipv6only=on ssl;
    server_name {{inventory_hostname}};

    if ($host !~* ^{{inventory_hostname}}$ ) {
        return 444;
    }

    # Certbot / Let's encrypt specific
    location ^~ /.well-known/acme-challenge/ {
        alias   /usr/share/nginx/html/certbot/.well-known/acme-challenge/;
    }

    # Serving app locations
    location /static/ {
        alias   {{project_dir}}naxos/static/;
    }

    location /media/ {
        alias   {{project_dir}}naxos/media/;
    }

    location / {
        proxy_http_version  1.1;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    Host $http_host;
        proxy_set_header    X-NginX-Proxy true;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_redirect      off;
        proxy_pass          http://127.0.0.1:8000/;  # gunicorn server
    }

    location /socket.io {
        proxy_http_version  1.1;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header	Host $http_host;
        proxy_set_header	Upgrade $http_upgrade;
        proxy_set_header	Connection "upgrade";
        proxy_redirect		off;
        proxy_pass		    http://socket;
    }
}
