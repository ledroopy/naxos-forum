---
- name: load vaulted variables
  include_vars: vault/main.yml

# Directories setup
- name: create global directory
  file:
    path: "{{project_dir}}"
    state: directory
    owner: "{{app_user}}"
    group: "{{app_user}}"
- name: create log directory
  file:
    path: /var/log/{{project_name}}
    state: directory
    group: "{{app_user}}"
    owner: "{{app_user}}"
    mode: 0755
- name: store user configuration
  template:
    src: "{{item.name}}"
    dest: /home/{{app_user}}/{{item.dest}}
    owner: "{{app_user}}"
    mode: 0600
  with_items:
    - { name: "sh_env", dest: ".bash_profile" }
- name: clone git repo
  become_user: "{{app_user}}"
  git:
    repo: "{{repo}}"
    dest: "{{project_dir}}"
    version: "{{branch}}"
    update: yes
    recursive: no
  when: env_type != "dev"
  # notify: restart web services  # Ansible 2.2

# Dependencies
- name: install apt packages
  apt:
    name: "{{item}}"
    state: installed
  with_items:
    - python-imaging
    - libjpeg62  # specific to ubuntu 14.04
    - libjpeg-dev
    - libtiff5-dev
    - libfreetype6-dev
    - liblcms2-dev
    - libwebp-dev
    - nginx
    - postgresql
    - postgresql-server-dev-9.3
    - python-psycopg2
    - memcached
    - libmemcached-dev
- name: install pip dependencies
  become_user: "{{app_user}}"
  pip:
    extra_args: "--upgrade"
    requirements: "{{project_dir}}requirements/{{env_type}}.txt"
    virtualenv: "{{project_dir}}env"
    virtualenv_python: python3
- name: check if yarn.lock exists
  stat: path={{project_dir}}naxos/nodejs/yarn.lock
  register: yarn_lock
- name: install node dependencies
  become_user: "{{app_user}}"
  command: /usr/bin/yarn chdir={{project_dir}}naxos/nodejs/
  when: yarn_lock.stat.exists == False

# Django setup
- name: set up django settings module
  template:
    src: django-settings.py
    dest: "{{project_dir}}naxos/naxos/settings.py"
    owner: "{{app_user}}"
    mode: 0600
  # notify: restart web services  # Ansible 2.2
- name: copy ad html snippets
  copy:
    src: "{{item}}"
    dest: "{{project_dir}}naxos/templates/ads/"
    owner: "{{app_user}}"
    mode: 0600
  with_items:
    - amazon.html
    - paypal_gift.html
  # notify: restart web services  # Ansible 2.2

# DB setup
- name: create app_user user in postgres
  become_user: postgres
  postgresql_user:
    name: "{{app_user}}"
    password: "{{db_password}}"
    encrypted: true
- name: create project db
  become_user: postgres
  postgresql_db:
    name: "{{project_name}}"
    owner: "{{app_user}}"
    encoding: UTF-8
  register: create_db
- include: init_db.yml
  when: create_db.changed

# Gunicorn setup
- name: create bin/ directory
  file:
    path: "{{project_dir}}bin/"
    owner: "{{app_user}}"
    group: "{{app_user}}"
    state: directory
    mode: 0700
- name: set up gunicorn start script
  template:
    src: gunicorn_start
    dest: "{{project_dir}}bin/"
    owner: "{{app_user}}"
    mode: 0700

# Nginx conf
- name: remove default nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: restart nginx
- name: add site in nginx
  template:
    src: nginx.conf
    dest: /etc/nginx/sites-enabled/{{project_name}}.conf
    mode: 0644
  notify: restart nginx

# Supervisord setup
- name: install supervisord conf
  template:
    src: templates/supervisor.conf
    dest: /etc/supervisor/conf.d/app.conf
  # notify: restart web services  # Ansible 2.2
- name: update engine
  supervisorctl: name="app:" state=present
- name: start engine
  supervisorctl: name="app:" state=started
