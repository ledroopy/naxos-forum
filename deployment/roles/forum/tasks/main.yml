---
- name: load vaulted variables
  include_vars: vars/vault.yml

- name: create host app folders
  file:
    state: directory
    path: "{{ansible_env.HOME}}/{{item}}"
  with_items:
    - html
    - secrets

- name: copy ad html snippets
  copy:
    src: paypal.html
    dest: "{{ansible_env.HOME}}/html/"

- name: Add secret file
  copy:
    content: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      32356530323166373039373835323863613862393566653938623531313465303430393861306638
      3932323831363963333138333061383730323833356132320a626563386635323135656165623735
      62323235306435366135343664396266343062336631646535643838343831373137623266643561
      3334396133646637660a663130393565396230633336303338313135356536636664656163316364
      38646539666565386432313533313737666662663130343130356439303566373032613563656661
      37666634616566363534636532326165326262336139373832626161323230613365313538326231
      393165383666663462356533653236303562
    dest: "{{ansible_env.HOME}}/secrets/secret.txt"

# Forum server
- name: stop forum container
  docker_container:
    name: forum
    state: absent
  ignore_errors: yes
  register: container_stop
  until: not container_stop.get("failed")
  retries: 5
  delay: 10
- name: launch forum container
  docker_container:
    name: forum
    image: "{{forum_image}}:{{version}}"
    pull: yes
    state: started
    restart_policy: unless-stopped
    networks:
      - name: "{{network}}"
        aliases:
          - forum
      - name: nginx
        aliases:
          - forum
      - name: postgres
        aliases:
          - forum
    env:
      HOSTNAME: "{{inventory_hostname}}"
      HOST_IP_ADDRESS: "{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}"
      DB_NAME: "{{db_name}}"
      DB_USER: "{{db_user}}"
      DB_PASSWORD: "{{db_password}}"
      AWS_STORAGE_BUCKET_NAME: "{{aws_storage_bucket_name}}"
      AWS_ACCESS_KEY_ID: "{{aws_access_key_id}}"
      AWS_SECRET_ACCESS_KEY: "{{aws_secret_access_key}}"
      EMAIL_HOST: "{{email_host}}"
      EMAIL_PORT: "{{email_port}}"
      SERVER_EMAIL: "{{server_email}}"  # email address to use
      EMAIL_HOST_PASSWORD: "{{email_host_password}}"
      EMAIL_SERVER_PREFIX: "{{email_server_prefix}}"
      ADMIN_NAME: "{{admin_name}}"
      ADMIN_EMAIL: "{{admin_email}}"
    volumes:
      - "{{ansible_env.HOME}}/secrets:/app/secrets/"
      - "{{ansible_env.HOME}}/html:/app/templates/ads/:ro"

# Websocket server
- name: stop websocket container
  docker_container:
    name: websocket
    state: absent
  ignore_errors: yes
  register: container_stop
  until: not container_stop.get("failed")
  retries: 5
  delay: 10
- name: launch websocket container
  docker_container:
    name: websocket
    image: "{{websocket_image}}:{{version}}"
    pull: yes
    state: started
    restart_policy: unless-stopped
    networks:
      - name: "{{network}}"
        aliases:
          - websocket
      - name: nginx
        aliases:
          - websocket

# Purge expired sessions from db
- name: add clearsessions cron
  cron:
    name: django clearsessions
    job: docker exec forum python3 manage.py clearsessions
    hour: "4"
    minute: "0"
...
